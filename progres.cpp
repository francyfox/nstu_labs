// progres.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"


int _tmain(int argc, _TCHAR* argv[])
{
	return 0;
}
int(mainCRTStartup); // Так как найти точку входа?
// библиотеки

#include <iostream>
#include <string> 
#include <math.h>    // матан
#include <Windows.h> // локализация (ввод и вывод данных на русском)





using namespace std;
string name;

class progression {
	// идея структуры взял из видеоурока, там сказано, что подобный метод является хорошим тоном
private: 
	int b1, q, n, answ; 
public:
	
	void message () {  //voidы как гиперссылки
		cout << "Введите значения для нахождения суммы геом. прогрессии (b1, q , n)." << endl << "Для очистки консоли введите букву" << endl << endl;
	
	}
	
	void set (int number_one, int denominator, int grade, int result) { // b1, q, n (чему равны переменые)
        b1 = number_one; // первый член прогресссии
		q = denominator; // знаминатель
		n = grade;       // степень
		answ = result;   // ответ

			}
	void get () { // выводит результат
		cout << " Первый член прогр. - [" << b1 << "], знаминатель[" << q << "],степень прогр.["<< n << "]" <<endl;
	}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void add_num () { // ввод данных
		cout << "Введите первый член (b1) :";
		 cin>>b1;
//Ошибка 696 в случае набора b = 0
		 try {
			if (b1 == 0)
				throw 696;
		} catch (int y) {     // видимо функции выкинуть и поймать связаны, именно так он распознал, что 696 = y 
			cout << "Error #" << y <<"  // первый член прогрессии не должен быть равен 0 (0/x=...) " << endl;
			 system("pause"); 
			 return void(); // возврат функции
			 
						}
		cout << "Введите знаминатель (q):"; 
		 cin>>q;
//Ошибка 333 в случае набора q = 1
			try {
			if (q == 1)
				throw 333;
		} catch (int i) {
			cout << "Error #" << i <<"  // знаминатель не должен быть равен 1 " << endl;
			 system("pause");
			 return void();
			 
						}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		cout << "Введите степень (n):";
		 cin>>n;
		double answ = (b1*(1-pow(q, n))/(1-q));                                  //b₁(1-qⁿ)/(1-q),
			cout << "Сумма первых n членов прогрессии:" << answ << endl;
	


}

	void non(){  // вырубает error 696 при вводе любых символов кроме цифр
	    
		
		
		 if(cin.fail()) { // если вывод син выдает ошибку, чистим буффер
		    cin.clear();
			cin.ignore(cin.rdbuf()->in_avail()); // У потока ввода есть буфер чтения, в котором он хранит символы. Мы обращаемся к нему, вызывая функцию rdbuf(). 
			//А любой уважающий себя буфер знает, сколько символов в нем содержится. Поскольку и мы хотим это узнать, мы вызываем функцию in_avail() этого буфера. 
			//Это количество символов нам и нужно проигнорировать
			system("cls"); // очистить консоль, фуф хорошо что не ругается, что уже используется pause
			cout << "////////Вводить только цифры." << endl <<"//Буквы съедают историю консоли 0_0" << endl << endl;
		 }
		 
	}

	void close(){
cout <<"Выход (0), продолжить (1):"; 
int i;
cin >> i;
while (i){ // классический цикл, если i=0 или отриц. число выходим, а если больше 0 продолжаем
if(i <= 0){
exit(0);

}
else if (i > 0){ // зацикливаем пока пользователь сам не захочет выйти
progression Sn;
Sn.non();
Sn.add_num ();
Sn.get();
cin.get();
Sn.close();
return void();
}

}
	}
};




int main (){
SetConsoleCP (1251); // ввод и вывод на русском, изначально хотел сделать сессии, решил оставить ;)
SetConsoleOutputCP (1251);



progression Sn; // с этого все начинается
Sn.message ();{
Sn.non();
Sn.add_num ();
Sn.get();}
cin.get();
Sn.close();


  
	
 
 return 0x1;
};


